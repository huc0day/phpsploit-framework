为Phpsploit-Framework软件做贡献


  感谢您对Phpsploit-Framework软件的兴趣，也感谢您对这个世界的兴趣!在您开始之前，请查看我们的行为准则。这有助于我们确保我们的社区对每个参与的人都是积极和支持的。


代码免费贡献


  在我们进入贡献代码的细节之前，您应该知道有多种方法可以在没有任何编程经验的情况下将代码贡献添加到Phpsploit-Framework软件:


  你可以提交bug和功能请求，并附上关于你的问题或想法的详细信息:

  如果您想提出一个功能，描述一下您希望实现什么（可视化的功能描述，往往更加有助于我们理解您的想法）。

  如果您正在报告一个错误，请确保包括预期的行为、观察到的行为和重现问题的步骤。资源脚本、控制台复制-粘贴以及您遇到错误的环境的任何背景信息都是我们需要的。更多信息可以在下面找到。

  帮助其他用户解决疑难性的问题。这可能需要相应的技术知识，但您也可以参与有关bug报告和特性请求的对话。这是一种很好的参与方式，不会让你感到不知所措!

  帮助其他提交者测试最近提交的pull请求。同样，这可能仍然需要一些职业技能，但是通过拉下一个pull请求并测试它，您可以帮助我们检验新代码贡献的稳定性及质量情况。

  向huc0day报告Phpsploit-Framework软件本身的安全漏洞。如果你认为Phpsploit-Framework软件容易受到攻击，请告诉我们!

  添加模块文档。总是需要新的文档，清理现有的文档也同样重要!如果您不是以汉语为母语的人，您可以通过替换任何可能使我们的文档难以理解的模棱两可的习语、隐喻或不清晰的语言来提供帮助。


代码贡献


  对于那些希望向Phpsploit-Framework软件添加代码的人来说，第一步是设置一个开发环境（Docker容器是一个不错的选择！Php语言以及对应扩展的安装是必须的！缺少扩展支持将使得Phpsploit-Framework软件的一些功能变得不可用！您还需要一个Web服务器软件,Apache2和Nginx都是不错的选择！同时，如果您希望测试对于数据仓库的访问，您可能还需要安装MySQL软件或者Mariadb软件！最后，您还需要一个文本编辑器，可以是记事本程序，也可以是像Phpstorm一样优秀的IDE环境工具）。一旦完成，我们建议初学者从练习Phpsploit-Framework软件的登陆和退出操作开始，为了尽快了解Phpsploit-Framework软件的相关功能使用，您可能仔细阅读相关功能的文件描述，并亲自在沙箱环境中测试Phpsploit-Framework软件的相应功能效果！我们提供了一个比较详细的Phpsploit-Framework软件技术白皮书文档，在此文档中，您可以更加了解Phpsploit-Framework软件的相关功能特性！在正式使用Phpsploit-Framework软件之前，您应该仔细阅读用户协议与免责声明中的全部内容！我们对于使用Phpsploit-Framework软件进行任何的未经被审计方有效书面授权的渗透测试与安全审计等行为都是明确禁止的！如果您未经被审计方有效的书面授权而使用Phpsploit-Framework软件对被审计方的网络与系统环境等空间开展渗透测试或安全审计等工作，那么您使用Phpsploit-Framework软件造成的任何后果及责任，均由您自行承担，Phpsploit-Framework软件作者不承担任何责任！同时，Phpsploit-Framework软件作者保留对于您超出Phpsploit-Framework软件用途限制的侵权行为进行司法追责的全部权利！在开始进行Phpsploit-Framework软件的二次开发之前，您应深入理解Phpsploit-Framework软件的技术实现，如果您拥有Php语言的编程基础和一些相关的网络及系统知识，那么Phpsploit-Framework软件的二次开发工作对于您来说，应该不会存在太大的难度!


  一旦你完成了你的新模块，并在本地测试了它，以确保它像预期的那样工作，您可以通过邮件方式huc0day@outlook.com联系Phpsploit-Framework软件作者。Phpsploit-Framework软件作者将会与您约定您所开发模块的相应提交方法，当Phpsploit-Framework软件作者对您所提交的代码审核通过之后，Phpsploit-Framework软件作者将会把您的新模块代码合并到Phpsploit-Framework软件中（Phpsploit-Framework软件作者将在您新提交的模块代码中保留您的署名，作为您对于Phpsploit-Framework软件所做贡献的感谢与支持）。


  最后，我们尽量公平细致地考虑所有的Phpsploit-Framework软件新模块贡献，但如果您不遵守用户协议与免责声明中的相关约定，您的贡献将被关闭。我们需要尽可能地确保被添加到Phpsploit-Framework软件中的新模块代码是按照高标准进行编写，并且安全可靠的。

  代码贡献的注意事项:

  记住以下几点，你的贡献才有最大的成功机会!

    新模块

      您必须保证您所编写的代码是安全可控的！

      在进行相应模块开发时，您应考虑Phpsploit-Framework软件的综合运行环境！

      您必须在提交模块代码前，自行做好提交模块代码的综合测试工作（包括但不限于安全测试、性能测试、稳定测试、兼容测试等）！

      您编写的模块代码必须与Phpsploit-Framework软件原生代码风格保持一致（尤其是对于文件名称、class名称、interface名称的命名等方面）！

      您在提交模块代码时，应清晰描述新模块代码的边界、特性、用途、注意事项等信息！

    库代码

      您在创建或添加库代码时，一定要注意做好兼容性与安全性等方面的综合测试！您应注意，即使是库中最小的变化也会破坏到现有的代码！

      请您务必遵循现有的库代码风格与代码规范来进行库代码的编写！只有统一的代码风格，才能最大限度地实现库代码的可阅读性！

      一定要为您的库代码编写清晰易读且便于理解的相关技术文档，只有这样，才能让人们更加容易地使用您所编写的库代码！

      请您不要在一次库代码的提交中修改很多现有库代码中的内容，小范围的内容修改可以让Phpsploit-Framework软件作者更加轻松地对修改内容进行安全性验证！

    错误修复

      以验证步骤的形式包括复制步骤。

      请在提交描述中以#<问题标题>的格式描述并链接到任何相应的具体问题。

    错误报告

      请直接向huc0day@outlook.com报告Phpsploit-Framework软件中的安全漏洞。

      当报告Phpsploit-Framework软件的问题时:

        一定要详细描述地你发现的bug，并使用一个描述性的标题。

        一定要包括复制步骤，堆栈跟踪，以及任何可能帮助我们修复错误的内容。

        不要在已解决的问题中重新报告问题;在提交新报告之前，您应该搜索下，您发现的bug问题是否已经在Phpsploit-Framework软件的官方仓库（https://github.com/huc0day/phpsploit-framework）中被有效修复。


如果您需要更多的指导，请与Phpsploit-Framework软件的作者联系（电子邮箱：huc0day@outlook.com）。


最后，感谢您用了几分钟的时间读到这里!您已经进入了Phpsploit-Framework软件的世界，积极地开始有趣的探索吧! ^_^


